{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sanskarkhare\\\\Desktop\\\\Family-budget-planner\\\\client\\\\src\\\\context\\\\GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, createContext } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n};\nexport const GlobalContext = /*#__PURE__*/createContext(initialState);\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/v1/transactions');\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransaction,\n      error,\n      loading,\n      getTransactions\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 12\n  }, this);\n};\n\n_s(GlobalProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["C:/Users/sanskarkhare/Desktop/Family-budget-planner/client/src/context/GlobalState.js"],"names":["React","useReducer","createContext","AppReducer","axios","initialState","transactions","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","res","get","type","payload","data","err","response","addTransaction","transaction","deleteTransaction","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,EADG;AAEjBC,EAAAA,KAAK,EAAE,IAFU;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;AAMA,OAAO,MAAMC,aAAa,gBAAGP,aAAa,CAACG,YAAD,CAAnC;AAEP,OAAO,MAAMK,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,UAAU,CAACE,UAAD,EAAaE,YAAb,CAApC;;AAGD,iBAAeS,eAAf,GAAgC;AAC3B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,sBAAV,CAAlB;AAEAH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,kBADD;AAELC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFb,OAAD,CAAR;AAIH,KAPD,CAQA,OAAMC,GAAN,EAAU;AACNP,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,mBADD;AAELC,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFtB,OAAD,CAAR;AAIH;AACJ;;AAED,WAASe,cAAT,CAAwBC,WAAxB,EAAoC;AAChCV,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAE,iBADD;AAELC,MAAAA,OAAO,EAAEK;AAFJ,KAAD,CAAR;AAIH;;AAED,WAASC,iBAAT,CAA2BC,EAA3B,EAA+B;AAC3BZ,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAE,oBADD;AAELC,MAAAA,OAAO,EAAEO;AAFJ,KAAD,CAAR;AAKH;;AAED,sBAAO,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC9BnB,MAAAA,YAAY,EAAEM,KAAK,CAACN,YADU;AAE9BkB,MAAAA,iBAF8B;AAG9BF,MAAAA,cAH8B;AAI9Bf,MAAAA,KAJ8B;AAK9BC,MAAAA,OAL8B;AAM9BM,MAAAA;AAN8B,KAA/B;AAAA,cASFH;AATE;AAAA;AAAA;AAAA;AAAA,UAAP;AAYH,CAhDM;;GAAMD,c;;KAAAA,c","sourcesContent":["import React, { useReducer, createContext } from 'react';\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\n\r\n\r\nconst initialState = {\r\n    transactions: [], \r\n    error: null,\r\n    loading: true,\r\n}\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState)\r\n\r\n\r\n   async function getTransactions(){\r\n        try {\r\n            const res = await axios.get('/api/v1/transactions');\r\n\r\n            dispatch({\r\n                type: 'GET_TRANSACTIONS',\r\n                payload: res.data.data,\r\n            })\r\n        }\r\n        catch(err){\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            })\r\n        }\r\n    }\r\n\r\n    function addTransaction(transaction){\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        })\r\n    }\r\n\r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        })\r\n\r\n    }\r\n\r\n    return(<GlobalContext.Provider value={{\r\n            transactions: state.transactions,\r\n            deleteTransaction,\r\n            addTransaction,\r\n            error,\r\n            loading,\r\n            getTransactions,\r\n            \r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}